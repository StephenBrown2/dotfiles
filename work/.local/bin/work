#!/usr/bin/env bash
source /etc/os-release

logfile="$HOME/workstart/$(date +%F).log";
touch $logfile

function log() {
  echo "$@" | tee -a $logfile;
}
cpus=$(grep -c process /proc/cpuinfo)
calm=$(echo ${cpus}/2 | bc)
load=$(awk '{print $1}' /proc/loadavg);
l=${load%.*};
while [ ${l} -gt ${calm} ]; do
  uptime;
  log 'waiting for system to calm down...';
  sleep 5;
  load=$(awk '{print $1}' /proc/loadavg);
  l=${load%.*};
done
uptime | tee -a $logfile;
if (( $(date +%w) >= 0 )); then
  if [ $ID == "ubuntu" ]; then
    sudo aptitude update && sudo aptitude upgrade -y
    if [ -f /var/run/reboot-required ]; then
      cat /var/run/reboot-required
      echo "Because these packages were updated:"
      cat /var/run/reboot-required.pkgs
      echo "Rebooting in 10 seconds..."
      sleep 10
      /usr/bin/cinnamon-session-quit --reboot
    fi
  elif [ $ID == "arch" ]; then
    apacman --quickcheck | grep linux && REBOOT=true || REBOOT=false
    pacaur -Syyu --needed --devel
    if [[ $REBOOT == true ]]; then
      shutdown -r 10 'Reboot because kernel update'
    fi
    if [[ $DESKTOP_SESSION == 'cinnamon' ]]; then
      devilspie &
    elif [[ $DESKTOP_SESSION == 'i3' ]]; then
      echo "Running i3, setting up the layouts"
      i3-msg "workspace 1:; append_layout ~/.config/i3/work-workspace-1.json"
      i3-msg "workspace 2:; append_layout ~/.config/i3/work-workspace-2.json"
      i3-msg "workspace 3:; append_layout ~/.config/i3/work-workspace-3.json"
    else
      echo "You're running sway, aren't you? Lay it out yourself."
    fi
  else
    echo "I don't know what $ID is, so I can't update it."
  fi
fi
echo
log 'Is the internet on fire?';
dig +short txt istheinternetonfire.com
log 'getting intensive password';
intensify --sso step7212
#python -c "import keyring;print keyring.set_password('racker', 'intensive_password', '$(intensify --sso step7212)')" >/dev/null
#echo $(python -c "import keyring;print keyring.get_password('racker', 'intensive_password')")
#log 'setting up ssh proxy';
log 'setting up dfw bastion proxy';
for dc in dfw; do
    echo "Authing to $dc firewall...";
    authnet.sh -d $dc -l -u step7212 -v && sleep 5 || echo "Whoops, try $dc again later";
done
#pgrep bastion || urxvt +sb -depth 32 -foreground '#B0B0B0' -background rgba:2000/2000/2000/aaaa -fn 'xft:DejaVu Sans Mono:pixelsize=10' -name bastion -e ssh bastion &
ps fawux | grep '[b]astion' || urxvt +sb -depth 32 -foreground '#B0B0B0' -background rgba:2000/2000/2000/aaaa -name bastion -e ssh bastion &

sleep 5;
#log 'checking mountpoint';
#( mountpoint '/media/stephen/Data' && VBoxManage startvm --type gui 632f2be0-2865-4b06-a527-b5a8c3dcd424 & ) | tee -a $logfile
#echo 'Starting OWA';
#google-chrome &
#log 'starting autokey';
#/home/stephen/.local/bin/autokey-gtk 2>/dev/null &
sleep 5;
log 'starting Shutter';
pgrep shutter || shutter --min_at_startup 2>/dev/null &
sleep 5;
log 'starting Pidgin';
pgrep pidgin || pidgin &
sleep 5;
log 'starting Slack';
pgrep slack || slack &
sleep 5;
log 'starting go-nucleus-agent';
if [[ ! $(pgrep go-nucleus) ]]; then
  cd ~/gocode
  export GOPATH=`pwd`
  go get github.com/boltdb/bolt/
  cd src/go-nucleus-agent
  git pull
  go run ${GOPATH}/src/go-nucleus-agent/go-nucleus-agent.go -profile `ls -d ~/.mozilla/firefox/*.default` -terminal-path=terminator  -terminal-args=-x >/var/log/fission.log &
fi
log 'starting Firefox';
pgrep firefox || firefox 1>&2 2>/dev/null &
sleep 5;
log 'starting Chromium';
#google-chrome-unstable --proxy-server="socks://localhost:4444" 2>/dev/null &
pgrep chromium || chromium 2>/dev/null &
#sleep 5;
#log 'Smartsheet Chromium App'
#/usr/bin/chromium --profile-directory=Default --app-id=alehdleagcgnimdipdmllebddejplpbi &

log 'Google Play Music'
#/usr/bin/chromium --profile-directory=Default --app-id=fahmaaghhglfmonjliepjlchgpgfmobi &
# cd /home/stephen/src/Google-Play-Music-Desktop-Player-UNOFFICIAL- && git pull && rm -rf node_modules && npm install && npm run build && npm start &
pgrep Google || gpmdp &

log 'Terminal audio visualizer'
#termite -e cava -t cava -c ~/.config/termite/config.cava --geometry=540x296 &
pgrep vis || urxvt +sb -depth 32 -foreground '#B0B0B0' -background rgba:2000/2000/2000/aaaa -fn 'xft:DejaVu Sans Mono:pixelsize=2' -geometry 179x98 -name visualizer -e vis &

log 'Google Hangouts Chromium App'
/usr/bin/chromium --profile-directory=Default --app-id=knipolnnllmklapflnccelgolnpehhpl &
sleep 5
log 'starting Sublime';
pgrep subl3 || subl3 2>/dev/null &
#sleep 5;
#log 'starting away-on-lock script'
#/home/stephen/src/aol.py &
log 'setting up the other bastion proxies';
for dc in hkg iad lon3 lon5 ord syd; do
    echo "Authing to $dc firewall...";
    authnet.sh -d $dc -l -u step7212 -v \
    && sleep 60 || echo "Whoops, try $dc again later";
done
sleep 120;
if [[ $DESKTOP_SESSION == 'cinnamon' ]]; then
    # Retile windows, just in case
    devilspie -a &
    # Kill dat proc
    [ $(pgrep devilspie | wc -l) -gt 1 ] && kill $(pgrep devilspie | tail -1)
fi
log 'done!'
