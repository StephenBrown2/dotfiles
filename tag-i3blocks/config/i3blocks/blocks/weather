#!/usr/bin/env bash
# Based on http://openweathermap.org/current

API_KEY="8a16c18406dea239a9a5cbd13eac8707"

MURICA=true

URGENT_LOWER=273
URGENT_HIGHER=310
UNITS="kelvin"
SYMBOL="K"

if [[ "${MURICA}" = true ]]; then
    URGENT_LOWER=32
    URGENT_HIGHER=100
    UNITS="imperial"
    SYMBOL="℉"
    SYMBOL="°F"
elif [[ "${MURICA}" = false ]]; then
    URGENT_LOWER=0
    URGENT_HIGHER=37
    SYMBOL="℃"
    SYMBOL="°C"
    UNITS="metric"
fi

ICON_SUNNY=""
ICON_CLOUDY=""
ICON_RAINY=""
ICON_STORM=""
ICON_SNOW=""

# Check on http://openweathermap.org/find
BASE_URL="http://api.openweathermap.org/data/2.5/weather?appid=${API_KEY}&units=${UNITS}"
INSTANCE="${BLOCK_INSTANCE:-4726206}"

if [[ "${INSTANCE}" =~ ^[0-9]{7}$ ]]; then
    CITY_ID=${INSTANCE}
    WEATHER_URL="${BASE_URL}&id=${CITY_ID}"
elif [[ "${INSTANCE}" =~ ^[0-9]{5}$ ]]; then
    CITY_ZIP=${INSTANCE}
    WEATHER_URL="${BASE_URL}&zip=${CITY_ZIP}"
elif [[ "${INSTANCE}" =~ ^([0-9]{5}),([a-zA-Z]{2})$ ]]; then
    CITY_ZIP=${BASH_REMATCH[1]}
    COUNTRY_CODE=${BASH_REMATCH[2]}
    WEATHER_URL="${BASE_URL}&zip=${CITY_ZIP},${COUNTRY_CODE}"
elif [[ "${INSTANCE}" =~ ^([0-9.-]+),([0-9.-]+)$ ]]; then
    LAT=${BASH_REMATCH[1]}
    LON=${BASH_REMATCH[2]}
    WEATHER_URL="${BASE_URL}&lat=${LAT}&lon=${LON}"
elif [[ "${INSTANCE}" =~ ^([a-zA-Z ]+),([a-zA-Z]{2})$ ]]; then
    CITY_NAME=$( echo "${BASH_REMATCH[1]}" | sed 's/ /%20/g')
    COUNTRY_CODE=${BASH_REMATCH[2]}
    WEATHER_URL="${BASE_URL}&q=${CITY_NAME},${COUNTRY_CODE}"
else
    echo "Didn't match anything."
    echo "This should never happen."
    exit 22
fi

WEATHER_INFO=$(curl -s "${WEATHER_URL}")
ERROR_CODE=$(echo "${WEATHER_INFO}" | jshon -e cod -u 2>/dev/null)
ERROR_MESSAGE=$(echo "${WEATHER_INFO}" | jshon -e message -u 2>/dev/null)
WEATHER_MAIN=$(echo "${WEATHER_INFO}" | jshon -e weather -a -e main -u)
WEATHER_DESC=$(echo "${WEATHER_INFO}" | jshon -e weather -a -e description -u)
WEATHER_TEMP=$(echo "${WEATHER_INFO}" | jshon -e main -e temp | awk '{printf "%.2f", $1}')
WEATHER_ICON=$(echo "${WEATHER_INFO}" | jshon -e weather -a icon)
ICON_URL="http://openweathermap.org/img/w/${WEATHER_ICON}.png"

if [[ "${WEATHER_MAIN}" = *Snow* ]]; then
  ICON="${ICON_SNOW}"
elif [[ "${WEATHER_MAIN}" = *Rain* ]] || [[ "${WEATHER_MAIN}" = *Drizzle* ]]; then
  ICON="${ICON_RAINY}"
elif [[ "${WEATHER_MAIN}" = *Cloud* ]]; then
  ICON="${ICON_CLOUDY}"
elif [[ "${WEATHER_MAIN}" = *Clear* ]]; then
  ICON="${ICON_SUNNY}"
elif [[ "${WEATHER_MAIN}" = *Extreme* ]]; then
  URGENT_LOWER=0
  URGENT_HIGHER=0
  ICON=""
elif [[ -n ${ERROR_CODE} ]]; then
  WEATHER_DESC=${ERROR_MESSAGE}
  WEATHER_TEMP="Err: ${ERROR_CODE}"
  SYMBOL=""
  ICON=""
else
  ICON=""
fi

echo "${ICON} ${WEATHER_DESC} ${WEATHER_TEMP}${SYMBOL}"
echo "${ICON} ${WEATHER_TEMP}${SYMBOL}"
echo ""

if [[ -n ${ERROR_CODE} ]] || [[ "${URGENT_LOWER}" -eq "${URGENT_HIGHER}" ]] || [[ "${WEATHER_TEMP%.*}" -lt "${URGENT_LOWER}" ]] || [[ "${WEATHER_TEMP%.*}" -gt "${URGENT_HIGHER}" ]]; then
  exit 33
fi
