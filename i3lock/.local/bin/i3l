#!/usr/bin/env zsh
#Make DBUS work
env | grep DBUS_SESSION_BUS_ADDRESS
env | grep XAUTHORITY

# Start counting time here
START="$(date +%s%N)"

# Set Pidgin status
purple-remote "setstatus?status=away&message=AFK"

# Take a screenshot
maim /tmp/screen.png

# Pause the music
vol=$((parec --device=$(pacmd list-sinks | awk '/*/{print $NF}') --latency=2 --channels=1 | od -N2 -td2 | head -n1 | cut -d' ' -f2- | tr -d ' ' | perl -pe 's/^-//') 2>/dev/null)
if [ $vol -gt 0 ]; then
    echo $vol
    xdotool key XF86AudioPlay
fi

# Figure out the dimensions of the screen
screenwidth=$(identify -format "%W" /tmp/screen.png)
screenheight=$(identify -format "%H" /tmp/screen.png)

# Make sure the comic fits inside it well
maxheight=${$((${screenheight}*.98))%%.*}

# How blurry should we make it?
# (Smaller pixscale=bigger pixels)
#pixscale=5
pixscale=$(( ( RANDOM % 15 ) + 1))
rescale=${$((1./${pixscale}*10000))%%.*}

# Pixelate! (Takes a couple seconds, trimmed using thumbnail first)
convert /tmp/screen.png -thumbnail ${pixscale}% -scale ${rescale}% /tmp/screen.png

# Now we get our comic and alt text
eval $(~/.local/bin/randxkcd.sh)

# and the width of that image, for the alt text
width=$(identify -format "%W" $filename)

# What font should imagemagick use?
#fontname=Humor-Sans
fontname=xkcd-Regular

# Set up the xkcd alt text and append to the comic image
captionoptions=(-background white -fill black -gravity center -font ${fontname} -pointsize 14 -size ${width})
convert "${captionoptions[@]}" caption:"Comic #${number}: ${title}" -append ${filename} "${captionoptions[@]}" caption:"${alttext}" -bordercolor white -border 5 -bordercolor black -border 1 -append -resize "x${maxheight}>" /tmp/xkcd-alt.png

# Stick the comic smack dab in the middle of the pixelated background
convert -gravity center -composite /tmp/screen.png /tmp/xkcd-alt.png /tmp/screen.png

# Log the time taken
END="$(date +%s%N)"
echo "time=$(echo "$END - $START" | bc), pixscale=$pixscale" >> /var/log/i3l.log

# Finally, lock the screen!
i3lock -efi /tmp/screen.png

# Clean up after ourselves
for file in screen.png xkcd.png xkcd-alt.png; do
  [[ -f /tmp/$file ]] && rm /tmp/$file
done

# I'm back!
purple-remote "setstatus?status=available&message="
